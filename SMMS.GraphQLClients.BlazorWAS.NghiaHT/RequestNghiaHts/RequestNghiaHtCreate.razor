@page "/RequestNghiaHts/Create"
@using SMMS.GraphQLClients.BlazorWAS.NghiaHT.GraphQLClients
@using SMMS.GraphQLClients.BlazorWAS.NghiaHT.Models
@inject NavigationManager NavigationManager
@inject GraphQLConsumer GraphQLConsumer

<h3>Create New Request</h3>

@if (medicationCategories == null)
{
    <div>Loading categories...</div>
}
else
{
    <EditForm Model="@newRequest" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="medicationName" class="form-label">Medication Name</label>
            <InputText id="medicationName" class="form-control" @bind-Value="newRequest.MedicationName" />
            <ValidationMessage For="@(() => newRequest.MedicationName)" />
        </div>
        <div class="mb-3">
            <label for="dosage" class="form-label">Dosage</label>
            <InputText id="dosage" class="form-control" @bind-Value="newRequest.Dosage" />
            <ValidationMessage For="@(() => newRequest.Dosage)" />
        </div>
        <div class="mb-3">
            <label for="frequency" class="form-label">Frequency</label>
            <InputText id="frequency" class="form-control" @bind-Value="newRequest.Frequency" />
            <ValidationMessage For="@(() => newRequest.Frequency)" />
        </div>
        <div class="mb-3">
            <label for="reason" class="form-label">Reason</label>
            <InputText id="reason" class="form-control" @bind-Value="newRequest.Reason" />
            <ValidationMessage For="@(() => newRequest.Reason)" />
        </div>
        <div class="mb-3">
            <label for="instruction" class="form-label">Instruction</label>
            <InputText id="instruction" class="form-control" @bind-Value="newRequest.Instruction" />
            <ValidationMessage For="@(() => newRequest.Instruction)" />
        </div>
        <div class="mb-3">
            <label for="quantity" class="form-label">Quantity</label>
            <InputNumber id="quantity" class="form-control" @bind-Value="newRequest.Quantity" />
            <ValidationMessage For="@(() => newRequest.Quantity)" />
        </div>
        <div class="mb-3">
            <label for="startDate" class="form-label">Start Date</label>
            <InputDate id="startDate" class="form-control" @bind-Value="newRequest.StartDate" />
            <ValidationMessage For="@(() => newRequest.StartDate)" />
        </div>
        <div class="mb-3">
            <label for="category" class="form-label">Medication Category</label>
            <InputSelect id="category" class="form-control" @bind-Value="newRequest.MedicationCategoryQuanTnid">
                <option value="">Select a category</option>
                @foreach (var category in medicationCategories)
                {
                    <option value="@category.MedicationCategoryQuanTnid">@category.CategoryName</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => newRequest.MedicationCategoryQuanTnid)" />
        </div>
        <div class="mb-3">
            <label for="isApproved" class="form-label">Is Approved</label>
            <InputCheckbox id="isApproved" class="form-check-input" @bind-Value="newRequest.IsApproved" />
            <ValidationMessage For="@(() => newRequest.IsApproved)" />
        </div>
        <button type="submit" class="btn btn-primary">Create</button>
        <NavLink href="/RequestNghiaHts/RequestNghiaHtList" class="btn btn-secondary">Cancel</NavLink>
    </EditForm>
}

@code {
    private RequestNghiaHt newRequest = new RequestNghiaHt { CreatedDate = DateTime.Now };
    private List<MedicationCategoryQuanTn> medicationCategories;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            medicationCategories = await GraphQLConsumer.GetMedicationCategories();
        }
        catch (Exception ex)
        {
            // Log error if needed
            medicationCategories = new List<MedicationCategoryQuanTn>();
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            var result = await GraphQLConsumer.CreateRequestNghiaHt(newRequest);
            if (result > 0)
            {
                NavigationManager.NavigateTo("/RequestNghiaHts/RequestNghiaHtList");
            }
            else
            {
                errorMessage = "Failed to create request.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error creating request: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
    }
}